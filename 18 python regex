import re

# # re.match 尝试从字符串的起始位置匹配一个模式，如果不是起始位置匹配成功的话，match()就返回none。


# print(re.match('www', 'www.runoob.com').span())  # 在起始位置匹配
# print(re.match('com', 'www.runoob.com'))         # 不在起始位置匹配
 
# line = "Cats are smarter than dogs"
# matchObj = re.match( r'(.*) are (.*?) .*', line, re.M|re.I)

# if matchObj:
#    print ("matchObj.group() : ", matchObj.group())
#    print ("matchObj.group(1) : ", matchObj.group(1))
#    print ("matchObj.group(2) : ", matchObj.group(2))
# else:
#    print ("No match!!")


# # re.search 扫描整个字符串并返回第一个成功的匹配。


# print(re.search('www', 'www.runoob.com').span())  # 在起始位置匹配
# print(re.search('com', 'www.runoob.com').span())         # 不在起始位置匹配

# line = "Cats are smarter than dogs"
# searchObj = re.search( r'(.*) are (.*?) .*', line, re.M|re.I)

# if searchObj:
#    print ("searchObj.group() : ", searchObj.group())
#    print ("searchObj.group(1) : ", searchObj.group(1))
#    print ("searchObj.group(2) : ", searchObj.group(2))
# else:
#    print ("Nothing found!!")


# # re.sub 用于替换字符串中的匹配项。


# phone = "2004-959-559 # 这是一个电话号码"

# # 删除注释
# num = re.sub(r'#.*$', "", phone)
# print ("电话号码 : ", num)
 
# # 移除非数字的内容
# num = re.sub(r'\D', "", phone)
# print ("电话号码 : ", num)


# # 将匹配的数字乘于 2

# s = 'A23G4HFD567'

# def double(matched):
#     value = int(matched.group('value'))
#     return str(value * 2)

# print(re.sub('(?P<value>\d+)', double, s))


# re.compile 函数用于编译正则表达式，生成一个正则表达式（ Pattern ）对象


# pattern = re.compile(r'\d+')

# m = pattern.match('one12twothree34four')        # 查找头部，没有匹配
# print( m )

# m = pattern.match('one12twothree34four', 2, 10) # 从'e'的位置开始匹配，没有匹配
# print( m )

# m = pattern.match('one12twothree34four', 3, 10) # 从'1'的位置开始匹配，正好匹配
# print( m ) 

# print(m.group(0))
# print(m.start(0))
# print(m.end(0))
# print(m.span(0))


# # re.findall 在字符串中找到正则表达式所匹配的所有子串，并返回一个列表，如果有多个匹配模式，则返回元组列表，如果没有找到匹配的，则返回空列表。
# # 注意： match 和 search 是匹配一次 findall 匹配所有

# result1 = re.findall(r'\d+','runoob 123 google 456')
 
# pattern = re.compile(r'\d+')   # 查找数字

# result2 = pattern.findall('runoob 123 google 456')
# result3 = pattern.findall('run88oob123google456', 0, 10)
 
# print(result1)
# print(result2)
# print(result3)

# result = re.findall(r'(\w+)=(\d+)', 'set width=20 and height=10')

# print(result)


# # re.finditer在字符串中找到正则表达式所匹配的所有子串，并把它们作为一个迭代器返回


it = re.finditer(r"\d+","12a32bc43jf3") 
for match in it: 
    print (match.group() )
